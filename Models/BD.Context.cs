//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyMClothing.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DB_MMCEntities1 : DbContext
    {
        public DB_MMCEntities1()
            : base("name=DB_MMCEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<RESENA> RESENA { get; set; }
        public virtual DbSet<ROLES> ROLES { get; set; }
        public virtual DbSet<DETALLE_VENTA> DETALLE_VENTA { get; set; }
        public virtual DbSet<TEMPORADA> TEMPORADA { get; set; }
        public virtual DbSet<CATEGORIA> CATEGORIA { get; set; }
        public virtual DbSet<PRODUCTO> PRODUCTO { get; set; }
        public virtual DbSet<VENTA> VENTA { get; set; }
        public virtual DbSet<ENTREGA_PRODUCTO> ENTREGA_PRODUCTO { get; set; }
        public virtual DbSet<USUARIO> USUARIO { get; set; }
    
        public virtual ObjectResult<Nullable<int>> sp_contarVentas(Nullable<int> mes, Nullable<int> año)
        {
            var mesParameter = mes.HasValue ?
                new ObjectParameter("mes", mes) :
                new ObjectParameter("mes", typeof(int));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_contarVentas", mesParameter, añoParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_gananciasTienda(Nullable<int> mes, Nullable<int> año)
        {
            var mesParameter = mes.HasValue ?
                new ObjectParameter("mes", mes) :
                new ObjectParameter("mes", typeof(int));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_gananciasTienda", mesParameter, añoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_nuevosUsuarios(Nullable<int> mes, Nullable<int> año)
        {
            var mesParameter = mes.HasValue ?
                new ObjectParameter("mes", mes) :
                new ObjectParameter("mes", typeof(int));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_nuevosUsuarios", mesParameter, añoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_resena(Nullable<int> calificacion, Nullable<int> idprod, Nullable<int> iduser)
        {
            var calificacionParameter = calificacion.HasValue ?
                new ObjectParameter("calificacion", calificacion) :
                new ObjectParameter("calificacion", typeof(int));
    
            var idprodParameter = idprod.HasValue ?
                new ObjectParameter("idprod", idprod) :
                new ObjectParameter("idprod", typeof(int));
    
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("iduser", iduser) :
                new ObjectParameter("iduser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_resena", calificacionParameter, idprodParameter, iduserParameter);
        }
    
        public virtual int sp_confirmarventa(Nullable<int> idventa)
        {
            var idventaParameter = idventa.HasValue ?
                new ObjectParameter("idventa", idventa) :
                new ObjectParameter("idventa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_confirmarventa", idventaParameter);
        }
    
        public virtual int sp_generarventa(Nullable<int> iduser, Nullable<System.DateTime> fecha)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("iduser", iduser) :
                new ObjectParameter("iduser", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_generarventa", iduserParameter, fechaParameter);
        }
    
        public virtual int sp_insertdetalleventa(Nullable<int> iduser, Nullable<System.DateTime> fecha, Nullable<int> idprod, Nullable<int> cantidad)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("iduser", iduser) :
                new ObjectParameter("iduser", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var idprodParameter = idprod.HasValue ?
                new ObjectParameter("idprod", idprod) :
                new ObjectParameter("idprod", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertdetalleventa", iduserParameter, fechaParameter, idprodParameter, cantidadParameter);
        }
    
        public virtual ObjectResult<sp_emailproductos_Result> sp_emailproductos(Nullable<int> iduser, Nullable<System.DateTime> fecha)
        {
            var iduserParameter = iduser.HasValue ?
                new ObjectParameter("iduser", iduser) :
                new ObjectParameter("iduser", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_emailproductos_Result>("sp_emailproductos", iduserParameter, fechaParameter);
        }
    
        public virtual int sp_cancelarventa(Nullable<int> idventa)
        {
            var idventaParameter = idventa.HasValue ?
                new ObjectParameter("idventa", idventa) :
                new ObjectParameter("idventa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_cancelarventa", idventaParameter);
        }
    
        public virtual int sp_fechaentrega(Nullable<int> idventa, Nullable<System.DateTime> fecha)
        {
            var idventaParameter = idventa.HasValue ?
                new ObjectParameter("idventa", idventa) :
                new ObjectParameter("idventa", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_fechaentrega", idventaParameter, fechaParameter);
        }
    
        public virtual int sp_fechasalida(Nullable<int> idventa, Nullable<System.DateTime> fecha)
        {
            var idventaParameter = idventa.HasValue ?
                new ObjectParameter("idventa", idventa) :
                new ObjectParameter("idventa", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_fechasalida", idventaParameter, fechaParameter);
        }
    
        public virtual ObjectResult<listaProductos_Result> listaProductos(string busqueda)
        {
            var busquedaParameter = busqueda != null ?
                new ObjectParameter("busqueda", busqueda) :
                new ObjectParameter("busqueda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listaProductos_Result>("listaProductos", busquedaParameter);
        }
    }
}
